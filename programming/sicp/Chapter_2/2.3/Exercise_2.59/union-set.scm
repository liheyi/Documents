(load "2.3/Example_16/element-of-set.scm")
(define (iter input result)
  (if (null? input) (reverse result)
      (let ((current-element (car input))
            (remain-element (cdr input)))
        (if (element-of-set? current-element result)
            (iter remian-element result)
            (iter remain-element (cons current-element result))))))

(define (union-set set1 set2)
  (iter (append set1 set2) '()))
